# AnimationData

# AnimationFrameData

# CapabilityData
myCapability <= myFunc(myArg1:1,myArg2:4); # myCapability  => myFunc( myArg1 : 1, myArg2 : 4 ); # myCapability
myCapability2 <= myFunc2(); # myCapability2 => myFunc2(); # myCapability2
myCapability3 <= myFunc3(myArg1:2); # myCapability3 => myFunc3( myArg1 : 2 ); # myCapability3
usbKeyOut <= Output_usbCodeSend_capability(usbCode:1); # usbKeyOut   => Output_usbCodeSend_capability( usbCode : 1 ); # usbKeyOut

# DefineData

# MappingData
S0x001 + S0x002 : U0x01f; # S0x1+S0x2 : U"2"; # :S1 + S2[0]
S0x001 + S0x002, S0x003, S0x004 : U0x020; # S0x1+S0x2,S0x3,S0x4 : U"3"; # :S1 + S2, S3, S4[0]
S0x002 + S0x005, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :S2 + S5, S10 + S11[0]
S0x002 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :S2[0]
S0x003 + S0x006, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :S3 + S6, S10 + S11[0]
S0x003 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :S3[0]
S0x003, S0x004 : U0x01e; # S0x3,S0x4 : U"1"; # :S3, S4[0]
S0x004 + S0x009, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :S4 + S9, S10 + S11[0]
S0x004 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :S4[0]
S0x005 + S0x005, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :S5 + S5, S10 + S11[0]
S0x005 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :S5[0]
S0x006 + S0x006, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :S6 + S6, S10 + S11[0]
S0x006 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :S6[0]
S0x007 + S0x009, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :S7 + S9, S10 + S11[0]
S0x007 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :S7[0]
S0x008 + S0x005, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :S8 + S5, S10 + S11[0]
S0x008 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :S8[0]
S0x009 + S0x006, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :S9 + S6, S10 + S11[0]
S0x009 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :S9[0]
S0x00b : U0x029; # S0x0B : U["Esc"]; # :S11[0]
S0x010 + S0x009, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :S16 + S9, S10 + S11[0]
S0x010 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :S16[0]
S0x040 : U0x02a; # S0x40 : U"Backspace"; # :S64[0]
S0x042 : U0x029; # S0x42 : U"Esc"; # :S66[0]
S0x046 : U0x001, U0x002 + U0x01f; # S0x46 : U0x01, U2+U["2"-"5"]; # :S70[0]

# PixelChannelData

# PixelPositionData

# ScanCodePositionData

# VariableData
Author = HaaTa (Jacob Alexander) 2014; # Author = "HaaTa (Jacob Alexander) 2014"; # Author
KLL = 0.3; # KLL = 0.3; # KLL
Name = colemak; # Name = colemak; # Name

